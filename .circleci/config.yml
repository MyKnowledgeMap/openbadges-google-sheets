defaults:
  docker: &node-container
    - image: 'circleci/node:8.9.4'
version: 2
jobs:
  checkout-source:
    docker: *node-container
    steps:
      - checkout
      - save_cache:
          key: 'source-v1-{{ .Branch }}-{{ .Revision }}'
          paths:
            - '.git'
  install-dependencies:
    docker: *node-container
    steps:
      - restore_cache:
          key: 'source-v1-{{ .Branch }}-{{ .Revision }}'
      - checkout
      - restore_cache:
          keys:
            - 'dependencies-v1-{{ .Branch }}-'
            - 'dependencies-v1-'
      - run: 'npm install'
      - save_cache:
          key: 'dependencies-v1-{{ .Branch }}-{{ .Revision }}'
          paths:
            - 'node_modules'
  test:
    docker: *node-container
    environment:
      JEST_JUNIT_OUTPUT: 'reports/jest/jest-results.xml'
    steps:
      - restore_cache:
          key: 'source-v1-{{ .Branch }}-{{ .Revision }}'
      - checkout
      - restore_cache:
          key: 'dependencies-v1-{{ .Branch }}-{{ .Revision }}'
      - run: 'npm install'
      - run: 'mkdir -p reports/{jest,tslint}'
      - run: 'npm run lint:ci'
      - run: 'npm run test:ci'
      - store_test_results:
          path: 'reports'
      - store_artifacts:
          path: 'reports'
  build:
    docker: *node-container
    steps:
      - restore_cache:
          key: 'source-v1-{{ .Branch }}-{{ .Revision }}'
      - checkout
      - restore_cache:
          key: 'dependencies-v1-{{ .Branch }}-{{ .Revision }}'
      - run: 'npm install'
      - run: 'npm run build'
      - store_artifacts:
          path: 'dist'
      - persist_to_workspace:
          root: .
          paths:
            - dist
  deploy:
    docker: *node-container
    steps:
      - attach_workspace:
          at: /project
      - restore_cache:
          key: 'source-v1-{{ .Branch }}-{{ .Revision }}'
      - checkout
      - restore_cache:
          key: 'dependencies-v1-{{ .Branch }}-{{ .Revision }}'
      - run: 'npm install'
      - restore_cache:
          key: 'build-v1-{{ .Branch }}-{{ .Revision }}'
      - run: 'npm run package'
      - run: 'npm run deploy'
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - checkout-source
      - install-dependencies:
          requires:
            - 'checkout-source'
      - test:
          requires:
            - 'install-dependencies'
      - build:
          requires:
            - 'install-dependencies'
      - deploy:
          requires:
            - 'build'
          filters:
            branches:
              only:
                - master
